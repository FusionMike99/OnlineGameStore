@model GameListViewModel

@{
    ViewData["Title"] = "Games";
}

<h1>Games</h1>

@if (!Model.Games.Any())
{
    <div class="alert alert-warning alert-dismissible fade show">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>Warning!</strong> Sorry, we couldn't find games matching your search criteria.
    </div>
}

<div class="d-flex justify-content-between">
    <a asp-action="Create" class="btn btn-success">Add New Game</a>
    
    <div class="row">
        <div class="col">
            <select id="page-size-selector" form="sort-filter-form" asp-for="PageViewModel.PageSize"
                    name="PageSize" asp-items="Model.PageViewModel.PageSizeParameters" class="form-select">
            </select>
        </div>
        <div class="col">
            <partial name="_SortFilter" model="Model.SortFilterGameViewModel"/>
        </div>
    </div>
</div>

<partial name="_GamesList" for="Games"/>

<page-link page-view-model="@Model?.PageViewModel" page-action="GetGames" capacity="13"></page-link>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/js/page-link-extensions.js"></script>
    <script src="~/js/filter-extensions.js"></script>
}