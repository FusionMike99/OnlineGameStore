@using OnlineGameStore.DomainModels.Enums
@model GameViewModel

@{
    ViewData["Title"] = $"Game {Model.Name}";
}

<h1>Details</h1>

<div>
    <h4>Game</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>
        <dd class="col-sm-10">
            @if (string.IsNullOrWhiteSpace(Model.Publisher))
            {
                @Constants.DefaultPublisherAtGame
            }
            else
            {
                <a asp-controller="Publisher" asp-action="GetPublisherByCompanyName"
                   asp-route-companyName="@Model.Publisher" class="text-decoration-none">
                    @Model.Publisher
                </a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UnitsInStock)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UnitsInStock)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QuantityPerUnit)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QuantityPerUnit)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Discontinued)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Discontinued)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateAdded)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateAdded)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DatePublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DatePublished)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ViewsNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ViewsNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genres)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Genres.Any())
            {
                <ul class="list-group">
                    @foreach (var genre in Model.Genres)
                    {
                        <li class="list-group-item">@genre</li>
                    }
                </ul>
            }
            else
            {
                @Constants.DefaultGenresAtGame
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlatformTypes)
        </dt>
        <dd class="col-sm-10">
            <ul class="list-group">
                @foreach (var platformType in Model.PlatformTypes)
                {
                    <li class="list-group-item">@platformType</li>
                }
            </ul>
        </dd>
    </dl>
</div>

<div class="btn-toolbar" role="toolbar" aria-label="Details game toolbar">
    <div class="btn-group me-2" role="group" aria-label="Operation group">
        @if (User.IsHaveGameChangePermission(Model.Publisher))
        {
            <a asp-action="Update" asp-route-gameKey="@Model.Key" class="btn btn-warning">Update</a>
        }
        @if (User.IsInRoles(Permissions.ManagerPermission))
        {
            <form asp-controller="Game" asp-action="Remove" asp-route-gameKey="@Model.Key" method="post">
                <button type="submit" value="Remove" class="btn btn-danger">Remove</button>
            </form>
        }
        <a asp-action="GetGames" class="btn btn-primary">Back to List</a>
    </div>
    <div class="btn-group" role="group" aria-label="Comments group">
        @if (Model.DatabaseEntity != DatabaseEntity.Northwind)
        {
            <a asp-controller="Comment" asp-action="GetCommentsByGameKey"
               asp-route-gameKey="@Model.Key" class="btn btn-info">
                See comments
            </a>
        }
        <a asp-action="Download" asp-route-gameKey="@Model.Key" target="_blank" class="btn btn-success">Download</a>
        <a asp-controller="Order" asp-action="BuyProduct" asp-route-gameKey="@Model.Key"
           class="btn btn-warning @(Model.UnitsInStock <= 0 ? "disabled" : "")">
            Buy
        </a>
    </div>
</div>